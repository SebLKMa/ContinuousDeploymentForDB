-- CMN_EMP, maps to PeopleSoft Person Data
CREATE TABLE CMN.CMN_EMP
(
  INTERNAL_ID NUMBER NOT NULL 
, EMPLOYEE_NO VARCHAR2(20) NOT NULL
, FULL_NAME VARCHAR2(150) 
, GENDER VARCHAR2(1) 
, DOB DATE 
, MARITAL_STATUS VARCHAR2(1) 
, NATIONAL_ID_NO VARCHAR2(20)
, PASSPORT_NO VARCHAR2(20)
, PASSPORT_COUNTRY_CODE VARCHAR2(20)
, PASSPORT_EXPIRES_ON DATE
, WORK_PERMIT_NO VARCHAR2(20)
, WRKPMT_COUNTRY_CODE VARCHAR2(20)
, WRKPMT_EXPIRES_ON DATE
, ADDRESS_PRIMARY VARCHAR2(500) 
, ADDRESS_LINE_1 VARCHAR2(100) 
, ADDRESS_LINE_2 VARCHAR2(100) 
, ADDRESS_LINE_3 VARCHAR2(100) 
, ADDRESS_LINE_4 VARCHAR2(100) 
, POSTAL_CODE VARCHAR2(15) 
, COUNTRY_CODE VARCHAR2(20)
, PHONE_NO VARCHAR2(50) 
, EMAIL VARCHAR2(50)
, NATIONALITY_CODE VARCHAR2(20)
, RACE_CODE VARCHAR2(20)
, RELIGION_CODE VARCHAR2(20)
, COMPANY_CODE VARCHAR2(20)
, PLACE_OF_BIRTH VARCHAR2(50)
, COUNTRY_OF_BIRTH VARCHAR2(10)
, STATE_OF_BIRTH VARCHAR2(10)
, CONSTRAINT CMN_EMP_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);

-- CMN_EMPLOYMENTS, maps to PeopleSoft Job Data
CREATE TABLE CMN.CMN_EMPLOYMENTS 
(       
  INTERNAL_ID NUMBER NOT NULL
, EMPLOYEE_NO VARCHAR2(20) NOT NULL 
, EFFECTIVE_FROM DATE 
, EFFECTIVE_TO DATE 
, OCCUPATION VARCHAR2(50) 
, COMPANY_CODE VARCHAR2(20) 
, COMPANY_NAME VARCHAR2(50) 
, DEPARTMENT_CODE VARCHAR2(20) 
, DEPARTMENT_NAME VARCHAR2(20)
, EMPLOYEE_GRADE VARCHAR2(20) 
, EMPLOYEE_POSITION VARCHAR2(20) 
, EMPLOYEE_TYPE VARCHAR2(20) 
, EMPLOYEE_CATEGORY VARCHAR2(20) 
, EMPLOYEE_SUB_TYPE VARCHAR2(20)
, EMPLOYEE_SALARY_TYPE VARCHAR2(20) 
, SAL_ADMIN_PLAN VARCHAR2(20) 
, SHIFT_TYPE VARCHAR2(1)
, JOB_ROLE_CODE VARCHAR2(20) 
, SUPERVISOR_NO VARCHAR2(20) 
, SUPERVISOR_NAME VARCHAR2(50)
, JOB_CODE VARCHAR2(20)
, PAYGROUP VARCHAR2(20)
, IS_MAIN_JOB VARCHAR2(1)
, IS_ACTIVE VARCHAR2(1)
, PS_RECORD_NO NUMBER(3)
, SEQ_NO NUMBER(3)
, REPORTING_TO_POSITION VARCHAR2(10)
, EMPLOYEE_CLASS VARCHAR2(3)
, PAYROLL_STATUS VARCHAR2(1)
, FULL_PART_TIME VARCHAR2(1)
, HIRE_DATE DATE
, LOCATION VARCHAR2(10)
, EMPLOY_TYPE VARCHAR2(10)
, POI_TYPE VARCHAR2(20)
, CONSTRAINT CMN_EMPLOYMENTS_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);

-- CMN.CMN_CODE_TABLE
-- A generic table to keep generally static codes
-- Code Status could be used to indicate "is obsolete"
-- or deprecated, default is 0 for Active
CREATE TABLE CMN.CMN_CODE_TABLE
(
  INTERNAL_ID NUMBER NOT NULL 
, CODE_TYPE VARCHAR2(20) 
, CODE_NAME VARCHAR2(20)
, CODE_VALUE VARCHAR2(100)
, CODE_STATUS NUMBER DEFAULT 0 NOT NULL CHECK (CODE_STATUS in (0,1))
, CONSTRAINT CMN_CODE_TABLE_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);

-- CMN_NATIONALITIES
CREATE TABLE CMN.CMN_NATIONALITIES 
(       
  INTERNAL_ID NUMBER NOT NULL
, CODE VARCHAR2(20) NOT NULL
, NAME VARCHAR2(100) 
, ID_TYPE VARCHAR2(10) 
, CONSTRAINT CMN_NATIONALITIES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );
 
-- CMN_JOB_ROLES
CREATE TABLE CMN.CMN_JOB_ROLES
(       
  INTERNAL_ID NUMBER NOT NULL
, BU_CODE VARCHAR2(20) NOT NULL
, CODE VARCHAR2(20) NOT NULL
, EFFECTIVE_FROM DATE
, IS_ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL CHECK (IS_ACTIVE in (0,1))
, NAME VARCHAR2(100) 
, CONSTRAINT CMN_JOB_ROLES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_LOCATIONS
CREATE TABLE CMN.CMN_LOCATIONS
(       
  INTERNAL_ID NUMBER NOT NULL
, BU_CODE VARCHAR2(20) NOT NULL
, CODE VARCHAR2(20) NOT NULL
, EFFECTIVE_FROM DATE
, IS_ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL CHECK (IS_ACTIVE in (0,1))
, NAME VARCHAR2(100) 
, CONSTRAINT CMN_LOCATIONS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_EMAILS
CREATE TABLE CMN.CMN_EMAILS
(
  INTERNAL_ID NUMBER NOT NULL 
, EMPLOYEE_NO VARCHAR2(20) 
, EMAIL_TYPE VARCHAR2(10)
, IS_PREFERRED NUMBER(1) DEFAULT 0 NOT NULL CHECK (IS_PREFERRED in (0,1))
, EMAIL VARCHAR2(50)
, CONSTRAINT CMN_EMAILS_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
); 

-- CMN_DEPARTMENTS
CREATE TABLE CMN.CMN_DEPARTMENTS 
(       
  INTERNAL_ID NUMBER NOT NULL
, CODE VARCHAR2(20) NOT NULL
, NAME VARCHAR2(150) 
, MANAGER_NO VARCHAR2(20)
, COMPANY_CODE VARCHAR2(20)
, LOCATION_CODE VARCHAR2(20)
, MANAGER_NAME VARCHAR2(100)
, BU_CODE VARCHAR2(20)
, CONSTRAINT CMN_DEPARTMENTS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_EMP_POSITIONS
CREATE TABLE CMN.CMN_EMP_POSITIONS 
(       
  INTERNAL_ID NUMBER NOT NULL
, CODE VARCHAR2(20) NOT NULL
, NAME VARCHAR2(100) 
, COMPANY_CODE VARCHAR2(20)
, IS_ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL CHECK (IS_ACTIVE in (0,1))
, CONSTRAINT CMN_EMP_POSITIONS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_LEAVES
-- annual, medical leaves etc
-- No. of days is based on START_DATE to END_DATE
-- values for indicators are Y or N, for "which Half" are F or S
-- For half-day leave, PeopleSoft allows on first day and/or last day of the date range
-- For half-day leave, Peoplesoft allows for all days of the date range 
CREATE TABLE CMN.CMN_LEAVES 
(       
  INTERNAL_ID NUMBER NOT NULL
, EMPLOYEE_NO VARCHAR2(20) NOT NULL 
, EARNING_TYPE_NO NUMBER
, START_DATE DATE
, END_DATE DATE
, BEGIN_DAY_HALF_IND VARCHAR2(1)
, END_DAY_HALF_IND VARCHAR2(1)
, ALL_DAY_IND VARCHAR2(1)
, START_WHICH_HALF VARCHAR2(1)
, END_WHICH_HALF VARCHAR2(1)
, ALL_WHICH_HALF VARCHAR2(1)
, LEAVE_STATUS VARCHAR2(20)
, PS_RECORD_NO NUMBER NOT NULL
, REMARKS VARCHAR2(1000)
, CONSTRAINT CMN_LEAVES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_PUBLIC_HOLIDAYS
-- HOLIDAY_DATE is unique.
-- Enum values for HOLIDAY_DATE_TYPE are:
-- 1 - Original
-- 2 - Compensated
-- COMPENSATED_FOR refers to the original date, e.g. original date is a Sunday
-- Enum values for FULL_DAY_IND are:
-- 1 - Half Day (typically used to indicate this HOLIDAY_DATE is a holiday eve)
-- 2 - Full Day (Default)
CREATE TABLE CMN.CMN_PUBLIC_HOLIDAYS
(       
  INTERNAL_ID NUMBER NOT NULL
, HOLIDAY_NAME VARCHAR2(30)
, PS_HOLIDAY_SCHEDULE VARCHAR2(20) NOT NULL
, HOLIDAY_DATE DATE NOT NULL
, HOLIDAY_DATE_TYPE NUMBER(1)
, COMPENSATED_FOR DATE
, FULL_DAY_IND NUMBER(1)
, CONSTRAINT CMN_PUBLIC_HOLIDAYS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
 );

-- CMN_CALENDAR_GROUP
CREATE TABLE CMN.CMN_CALENDAR_GROUP 
(       
  INTERNAL_ID NUMBER NOT NULL 
, CALENDAR_ID NUMBER 
, CALENDAR_GROUP_NO VARCHAR2(50) 
, START_DATE DATE
, END_DATE DATE
, RUN_TYPE VARCHAR2(20)
, GP_PAY_GROUP VARCHAR2(20) 
, CALENDAR_PERIOD_ID NUMBER
, PAYMENT_DATE DATE
, CALENDAR_PERIOD_CODE VARCHAR2(20)
, CONSTRAINT CMN_CALENDAR_GROUP_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);
 
-- CMN_CALENDAR_PERIOD
CREATE TABLE CMN.CMN_CALENDAR_PERIOD 
(       
  INTERNAL_ID NUMBER NOT NULL
, CALENDAR_PERIOD_ID NUMBER 
, CALENDAR_PERIOD_DESCR VARCHAR2(50) 
, CALENDAR_PERIOD_CODE VARCHAR2(20) 
, PERIOD_START_DATE DATE 
, PERIOD_END_DATE DATE 
, FREQUENCY_CODE VARCHAR2(20)
, CONSTRAINT CMN_CALENDAR_PERIOD_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_EARNING_TYPES
CREATE TABLE CMN.CMN_EARNING_TYPES 
(       
  INTERNAL_ID NUMBER NOT NULL
, TYPE_NO NUMBER(8)
, TYPE_CODE VARCHAR2(20) 
, TYPE_NAME VARCHAR2(100) 
, TYPE_CAT VARCHAR2(10) 
, UOM VARCHAR2(50) 
, CONSTRAINT CMN_EARNING_TYPES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_ADDRESS_BOOKS
CREATE TABLE CMN.CMN_ADDRESS_BOOKS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, ADDRESS_BOOKS_CODE VARCHAR2(20) 
, ADDRESS_BOOKS_NAME VARCHAR2(150)
, ADDRESS_BOOKS_ADDRESS VARCHAR2(250) 
, ADDRESS_BOOKS_CATEGORY VARCHAR2(10)
, COMPANY_CODE VARCHAR2(20) 
, CONSTRAINT CMN_ADDRESS_BOOKS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
); 

-- CMN_PROJECTS
CREATE TABLE CMN.CMN_PROJECTS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, PROJECT_CODE VARCHAR2(20) 
, PROJECT_NAME VARCHAR2(150) 
, PROJECT_START_DATE DATE 
, PROJECT_END_DATE DATE 
, PROJECT_EST_TIME_ARRIVAL DATE 
, PROJECT_EST_TIME_DEPARTURE DATE 
, PROJECT_GROSS_TONNAGE NUMBER 
, COMPANY_CODE VARCHAR2(20) 
, CONSTRAINT CMN_PROJECTS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_ACTIVITIES
CREATE TABLE CMN.CMN_ACTIVITIES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, ACTIVITY_CODE VARCHAR2(20)
, ACTIVITY_NAME VARCHAR2(150)
, PROJECT_CODE VARCHAR2(20)
, COMPANY_CODE VARCHAR2(20)
, ACTIVITY_TYPE VARCHAR2(6)
, CONSTRAINT CMN_ACTIVITIES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_WORK_ORDERS
CREATE TABLE CMN.CMN_WORK_ORDERS 
(       
  INTERNAL_ID NUMBER NOT NULL , 
	"WORK_ORDER_NO" VARCHAR2(20 BYTE), 
	"SUPPLIER_CODE" VARCHAR2(20 BYTE), 
	"PROJECT_CODE" VARCHAR2(20 BYTE), 
	"COST_CENTRE_CODE" VARCHAR2(20 BYTE), 
	"COMPANY_CODE" VARCHAR2(20 BYTE), 
	"ORDER_TYPE" VARCHAR2(2 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"GATE_NO" VARCHAR2(20 BYTE), 
	"WORK_ORDER_DATE" DATE, 
	"REQUESTED_DATE" DATE, 
	"CANCELLED_DATE" DATE, 
	"BUYER_CODE" VARCHAR2(20 BYTE), 
	"ROW_STATUS" NUMBER(1,0) DEFAULT 0, 
	"ROW_VERSION" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(50 BYTE), 
	"MODIFIED_ON" DATE, 
	"MODIFIED_BY" VARCHAR2(50 BYTE), 
	"SYNC_ON" DATE, 
	"ORDER_SUFFIX" VARCHAR2(3 BYTE), 
	"WORK_ORDER_LONG_TEXT" VARCHAR2(60 BYTE), 
	"GROSS_AMOUNT" NUMBER, 
	"FOREIGN_AMOUNT" NUMBER, 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"CURRENCY_RATE" NUMBER, 
	"ORDER_STATUS" VARCHAR2(3 BYTE), 
	"FOREIGN_GROSS_AMOUNT" NUMBER
, CONSTRAINT CMN_WORK_ORDERS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_WORK_ORDERS_DTL
CREATE TABLE CMN.CMN_WORK_ORDERS_DTL 
(       
  INTERNAL_ID NUMBER NOT NULL, 
	"WORK_ORDER_NO" VARCHAR2(20 BYTE), 
	"ORDER_TYPE" VARCHAR2(2 BYTE), 
	"COMPANY_CODE" VARCHAR2(20 BYTE), 
	"ORDER_LINE_NO" NUMBER, 
	"ORDER_SUFFIX" VARCHAR2(3 BYTE), 
	"ITEM_CODE" VARCHAR2(30 BYTE), 
	"ITEM_DESCRIPTION1" VARCHAR2(30 BYTE), 
	"ITEM_DESCRIPTION2" VARCHAR2(30 BYTE), 
	"ITEM_QUANTITY" NUMBER, 
	"ITEM_PRICE" NUMBER, 
	"UNIT_OF_MEASURE" VARCHAR2(10 BYTE), 
	"TAX_CODE" VARCHAR2(3 BYTE), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"FOREIGN_UNIT_PRICE" NUMBER, 
	"LOCATION" VARCHAR2(30 BYTE), 
	"SUBLEDGER" VARCHAR2(12 BYTE), 
	"SUBLEDGER_TYPE" VARCHAR2(3 BYTE), 
	"COST_CENTER" VARCHAR2(12 BYTE), 
	"OBJECT_ACCOUNT" VARCHAR2(6 BYTE), 
	"SUBSIDIARY" VARCHAR2(8 BYTE), 
	"BRANCH_PLANT" VARCHAR2(12 BYTE), 
	"LAST_STATUS" VARCHAR2(3 BYTE), 
	"NEXT_STATUS" VARCHAR2(3 BYTE), 
	"FOREIGN_OPEN_AMOUNT" NUMBER, 
	"ROW_STATUS" NUMBER(1,0) DEFAULT 0, 
	"ROW_VERSION" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(50 BYTE), 
	"MODIFIED_ON" DATE, 
	"MODIFIED_BY" VARCHAR2(50 BYTE), 
	"SYNC_ON" DATE, 
	"OPEN_AMOUNT" NUMBER, 
	"RECEIVED_AMOUNT" NUMBER, 
	"FOREIGN_RECEIVED_AMOUNT" NUMBER, 
	"FOREIGN_GROSS_AMOUNT" NUMBER, 
	"GROSS_AMOUNT" NUMBER, 
	"ORDER_HEADER_ID" NUMBER
, CONSTRAINT CMN_WORK_ORDER_DTL_PK PRIMARY KEY (INTERNAL_ID) ENABLE
) ;

-- CMN_EQUIPMENTS
CREATE TABLE CMN.CMN_EQUIPMENTS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, EQUIPMENT_CODE VARCHAR2(20) 
, EQUIPMENT_NAME VARCHAR2(150) 
, EQUIPMENT_LONG_TEXT VARCHAR2(40) 
, EQUIPMENT_ASSET_NO VARCHAR2(50) 
, CATEGORY VARCHAR2(10) 
, EQUIPMENT_STATUS VARCHAR2(2)
, EQUIPMENT_UOM VARCHAR2(25) 
, EQUIPMENT_UOM_ABBR VARCHAR2(3)
, SECTION_CODE VARCHAR2(150) 
, COST_CENTRE_CODE VARCHAR2(20)
, COMPANY_CODE VARCHAR2(20)
, LAST_SERVICED_ON DATE
, LAST_SERVICED_BY VARCHAR2(150) 
, CONSTRAINT CMN_EQUIPMENTS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_PURCHASE_ORDERS
CREATE TABLE CMN.CMN_PURCHASE_ORDERS 
(       
  INTERNAL_ID NUMBER NOT NULL, 
	"PURCHASE_ORDER_NO" VARCHAR2(20 BYTE), 
	"ORDER_TYPE" VARCHAR2(2 BYTE), 
	"COMPANY_CODE" VARCHAR2(20 BYTE), 
	"BRANCH_PLANT" VARCHAR2(12 BYTE), 
	"SUPPLIER_CODE" VARCHAR2(20 BYTE), 
	"BUYER_CODE" VARCHAR2(20 BYTE), 
	"DELIVERY_PLACE" VARCHAR2(250 BYTE), 
	"PURCHASE_ORDER_DATE" DATE, 
	"REQUESTED_DATE" DATE, 
	"EXPECTED_DELIVERY_DATE" DATE, 
	"CANCELLED_DATE" DATE, 
	"TAX_CODE" VARCHAR2(5 BYTE), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"CURRENCY_RATE" NUMBER, 
	"BASE_CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"PAYMENT_TERMS" VARCHAR2(3 BYTE), 
	"PAYMENT_REMARKS" VARCHAR2(30 BYTE), 
	"DESCRIPTION" VARCHAR2(30 BYTE), 
	"PRINT_MESSAGE" VARCHAR2(60 BYTE), 
	"ORDER_BY" VARCHAR2(10 BYTE), 
	"ORDER_TAKEN_BY" VARCHAR2(10 BYTE), 
	"ORDER_STATUS" VARCHAR2(3 BYTE), 
	"REASON" VARCHAR2(1000 BYTE), 
	"ROW_STATUS" NUMBER(1,0) DEFAULT 0, 
	"ROW_VERSION" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(50 BYTE), 
	"MODIFIED_ON" DATE, 
	"MODIFIED_BY" VARCHAR2(50 BYTE), 
	"SYNC_ON" DATE, 
	"ORDER_SUFFIX" VARCHAR2(3 BYTE), 
	"FOREIGN_AMOUNT" NUMBER
, CONSTRAINT CMN_PURCHASE_ORDERS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_PURCHASE_ORDER_DTL
CREATE TABLE CMN.CMN_PURCHASE_ORDER_DTL 
(       
  INTERNAL_ID NUMBER NOT NULL, 
	"ORDER_HEADER_ID" NUMBER, 
	"PURCHASE_ORDER_NO" VARCHAR2(20 BYTE), 
	"ORDER_TYPE" VARCHAR2(2 BYTE), 
	"COMPANY_CODE" VARCHAR2(20 BYTE), 
	"ORDER_LINE_NO" NUMBER, 
	"ITEM_CODE" VARCHAR2(30 BYTE), 
	"ITEM_DESCRIPTION1" VARCHAR2(30 BYTE), 
	"ITEM_DESCRIPTION2" VARCHAR2(30 BYTE), 
	"ITEM_ATTACHED_DETAILS" VARCHAR2(30 BYTE), 
	"ITEM_QUANTITY" NUMBER, 
	"ITEM_PRICE" NUMBER, 
	"UNIT_OF_MEASURE" VARCHAR2(10 BYTE), 
	"LOCATION" VARCHAR2(30 BYTE), 
	"SUBLEDGER" VARCHAR2(12 BYTE), 
	"SUBLEDGER_TYPE" VARCHAR2(3 BYTE), 
	"PURCHASE_REQUISITION_NO" VARCHAR2(30 BYTE), 
	"TAX_CODE" VARCHAR2(3 BYTE), 
	"LAST_STATUS" VARCHAR2(3 BYTE), 
	"NEXT_STATUS" VARCHAR2(3 BYTE), 
	"ACCOUNT" VARCHAR2(30 BYTE), 
	"REMARKS" VARCHAR2(30 BYTE), 
	"LONG_DESCRIPTION" VARCHAR2(1000 BYTE), 
	"ROW_STATUS" NUMBER(1,0) DEFAULT 0, 
	"ROW_VERSION" NUMBER DEFAULT 0, 
	"CREATED_ON" DATE, 
	"CREATED_BY" VARCHAR2(50 BYTE), 
	"MODIFIED_ON" DATE, 
	"MODIFIED_BY" VARCHAR2(50 BYTE), 
	"SYNC_ON" DATE, 
	"ORDER_SUFFIX" VARCHAR2(3 BYTE), 
	"CURRENCY_CODE" VARCHAR2(3 BYTE), 
	"FOREIGN_UNIT_PRICE" NUMBER, 
	"FOREIGN_OPEN_AMOUNT" NUMBER, 
	"COST_CENTER" VARCHAR2(12 BYTE), 
	"OBJECT_ACCOUNT" VARCHAR2(6 BYTE), 
	"SUBSIDIARY" VARCHAR2(8 BYTE), 
	"BRANCH_PLANT" VARCHAR2(12 BYTE), 
	"OPEN_AMOUNT" NUMBER, 
	"RECEIVED_AMOUNT" NUMBER, 
	"FOREIGN_RECEIVED_AMOUNT" NUMBER, 
	"FOREIGN_GROSS_AMOUNT" NUMBER, 
	"GROSS_AMOUNT" NUMBER
, CONSTRAINT CMN_PURCHASE_ORDER_DTL_PK PRIMARY KEY (INTERNAL_ID) ENABLE
) ;

-- CMN_CURRENCIES
CREATE TABLE CMN.CMN_CURRENCIES 
(       
  INTERNAL_ID NUMBER NOT NULL  
, CURRENCY_CODE VARCHAR2(3) 
, CURRENCY_NAME VARCHAR2(100) 
, COMPANY_CODE VARCHAR2(20)
, CONSTRAINT CMN_CURRENCIES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_RFQS
CREATE TABLE CMN.CMN_RFQS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, RFQ_NO VARCHAR2(30) 
, RFQ_DATE DATE 
, ORDER_TYPE VARCHAR2(30) 
, RFQ_BID_CLOSING_DATE DATE 
, SUPPLIER_CODE VARCHAR2(30) 
, PURCHASER_CODE VARCHAR2(30) 
, COMPANY_CODE VARCHAR2(20) 
, CURRENCY_CODE VARCHAR2(20) 
, PURCHASE_REQUISITION_NO VARCHAR2(30) 
, REQUESTOR VARCHAR2(30) 
, PROJECT_CODE VARCHAR2(30) 
, REQUIRED_DELIVERY_DATE DATE 
, STATUS VARCHAR2(3) 
, HISTORY_STATUS NUMBER
, REVISION NUMBER
, SOA_STATUS NUMBER
, SOA_MESSAGE VARCHAR2(500)
, SOA_USER VARCHAR2(50)
, SOA_DATE DATE
, DIRECTORY_STATUS VARCHAR2(3)
, RFQ_BID_CLOSING_TIME DATE
, CONSTRAINT CMN_RFQS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_RFQ_DTL
CREATE TABLE CMN.CMN_RFQ_DTL 
(
  INTERNAL_ID NUMBER NOT NULL 
, RFQ_HEADER_ID NUMBER CONSTRAINT CMN_RFQ_DTL_FK REFERENCES CMN.CMN_RFQS (INTERNAL_ID) NOT NULL
, COMPANY_CODE VARCHAR2(20) 
, ORDER_TYPE VARCHAR2(30) 
, RFQ_NO VARCHAR2(30) 
, LINE_NO NUMBER
, ITEM_CODE VARCHAR2(30) 
, ITEM_QUANTITY NUMBER
, UNIT_OF_MEASURE VARCHAR2(3) 
, ITEM_DESCRIPTION1 VARCHAR2(60) 
, ITEM_DESCRIPTION2 VARCHAR2(30) 
, LONG_DESCRIPTION VARCHAR2(1500) 
, ITEM_PRICE NUMBER
, VALIDITY DATE
, SUPPLIER_CODE VARCHAR2(20) 
, SUPPLIER_ADDITIONAL_INFO VARCHAR2(500)
, PURCHASE_REQUISITION_NO VARCHAR2(30)
, REQUESTOR VARCHAR2(30)
, PROJECT_CODE VARCHAR2(30)
, CONSTRAINT CMN_RFQ_DTL_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_COMPANIES
CREATE TABLE CMN.CMN_COMPANIES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, COMPANY_CODE VARCHAR2(20) 
, COMPANY_ABBREVIATION VARCHAR2(40) 
, COMPANY_NAME VARCHAR2(150) 
, BUSINESS_UNIT VARCHAR2(20) 
, COMPANY_TYPE VARCHAR2(1) 
, CURRENCY_CODE_FROM VARCHAR2(3) 
, CONSTRAINT CMN_COMPANIES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_AP_INVOICES
CREATE TABLE CMN.CMN_AP_INVOICES 
(
  INTERNAL_ID NUMBER NOT NULL  
, INVOICE_NO VARCHAR2(20) 
, INVOICE_DATE DATE 
, DOCUMENT_NUMBER NUMBER
, ADDRESS_BOOK_CODE VARCHAR2(20) 
, PO VARCHAR2(8) 
, DUE_DATE DATE 
, CURRENCY_CODE VARCHAR2(3)
, GROSS_AMOUNT NUMBER 
, GST_TYPE NUMBER
, DISCOUNT NUMBER 
, INVOICE_STATUS VARCHAR2(20) 
, COMPANY_CODE VARCHAR2(20)
, AMOUNT_OPEN	NUMBER
, PAY_STATUS_CODE	VARCHAR2(1)
, PO_DOC_TYPE	VARCHAR2(2)
, DOC_TYPE	VARCHAR2(2)
, PAY_ITEM	VARCHAR2(3)
, PO_COMPANY_CODE VARCHAR2(20)
, COST_CENTER VARCHAR2(20)
, TAXABLE_AMOUNT NUMBER
, TAX_AMOUNT NUMBER
, TAX_TYPE VARCHAR2(20)
, TAX_CODE VARCHAR2(20)
, CURRENCY_MODE VARCHAR2(20)
, CURRENCY_FROM VARCHAR2(3)
, FOREIGN_TAXABLE_AMOUNT NUMBER
, FOREIGN_TAX_AMOUNT NUMBER
, FOREIGN_CURRENCY_CODE VARCHAR2(3)
, FOREIGN_OPEN_AMOUNT NUMBER
, FOREIGN_GROSS_AMOUNT NUMBER
, REFERENCE VARCHAR2(60)
, CONSTRAINT CMN_AP_INVOICES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_COST_TYPES
CREATE TABLE CMN.CMN_COST_TYPES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, CODE VARCHAR2(20) 
, NAME VARCHAR2(100) 
, CONSTRAINT CMN_COST_TYPES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_DOC_TYPES
CREATE TABLE CMN.CMN_DOC_TYPES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, CODE VARCHAR2(20) 
, NAME VARCHAR2(100) 
, CATEGORY VARCHAR2(20) 
, CONSTRAINT CMN_DOC_TYPES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_SUB_LEDGER_TYPES
CREATE TABLE CMN.CMN_SUB_LEDGER_TYPES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, SUB_LEDGER_TYPE_CODE VARCHAR2(20) 
, SUB_LEDGER_TYPE_DESCR VARCHAR2(20) 
, CONSTRAINT CMN_SUB_LEDGER_TYPES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_M_BUSINESS_UNIT_TYPES
CREATE TABLE CMN.CMN_M_BUSINESS_UNIT_TYPES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, BUSINESS_UNIT_TYPE_CODE VARCHAR2(20) 
, BUSINESS_UNIT_TYPE_NAME VARCHAR2(200) 
, IS_SUB_LEDGER_REQUIRED NUMBER
, CONSTRAINT CMN_M_BUSINESS_UNIT_TYPES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_SUB_LEDGERS
CREATE TABLE CMN.CMN_SUB_LEDGERS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, SUB_LEDGER_CODE VARCHAR2(20) 
, SUB_LEDGER_DESCR  VARCHAR2(100) 
, EMPLOYEE_NO VARCHAR2(20) 
, SUB_LEDGER_TYPE_CODE VARCHAR2(20) 
, CONSTRAINT CMN_SUB_LEDGER_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_BUSINESS_UNITS 
CREATE TABLE CMN.CMN_BUSINESS_UNITS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, BUSINESS_UNIT_CODE VARCHAR2(20) 
, BUSINESS_UNIT_NAME VARCHAR2(30) 
, COMPANY_CODE VARCHAR2(20) 
, PROJECT_CODE VARCHAR2(20) 
, DEPARTMENT_CODE VARCHAR2(20) 
, IS_PROJECT NUMBER(1) DEFAULT 0 NOT NULL CHECK (IS_PROJECT in (0,1,2)) 
, BUSINESS_UNIT_TYPE_CODE VARCHAR2(20) 
, CONSTRAINT CMN_BUSINESS_UNITS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN.CMN_BUSINESS_UNITS_HR
CREATE TABLE CMN.CMN_BUSINESS_UNITS_HR
(
  INTERNAL_ID NUMBER NOT NULL 
, CODE VARCHAR2(20) NOT NULL
, NAME VARCHAR2(100)
, IS_ACTIVE NUMBER(1) DEFAULT 1 NOT NULL CHECK (IS_ACTIVE in (0,1,2)) 
, CONSTRAINT CMN_BUSINESS_UNITS_HR_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);


-- CMN_COST_CENTRES
CREATE TABLE CMN.CMN_COST_CENTRES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, COST_CENTRE_CODE VARCHAR2(20) 
, COST_CENTRE_NAME VARCHAR2(50) 
, COST_CENTRE_TYPE VARCHAR2(20) 
, COMPANY_CODE VARCHAR2(20) 
, CONSTRAINT CMN_COST_CENTRES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_SUPPLIERS
CREATE TABLE CMN.CMN_SUPPLIERS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, SUPPLIER_CODE VARCHAR2(20) 
, SUPPLIER_NAME VARCHAR2(150) 
, SUPPLIER_ADDRESS VARCHAR2(250) 
, SUPPLIER_CATEGORY VARCHAR2(10) 
, SUPPLIER_STATUS VARCHAR2(10) 
, COMPANY_CODE VARCHAR2(20) 
, RCB_NO VARCHAR2(20) 
, CURRENCY_CODE VARCHAR2(20) 
, TAX_CODE VARCHAR2(20) 
, TAX_TYPE VARCHAR2(20) 
, PAYMENT_TERM VARCHAR2(20) 
, CONSTRAINT SUPPLIER_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_CUSTOMERS
CREATE TABLE CMN.CMN_CUSTOMERS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, CUSTOMER_CODE VARCHAR2(20) 
, CUSTOMER_NAME VARCHAR2(150) 
, CUSTOMER_ADDRESS VARCHAR2(250) 
, CUSTOMER_CATEGORY VARCHAR2(10) 
, CUSTOMER_STATUS VARCHAR2(10) 
, COMPANY_CODE VARCHAR2(20) 
, CURRENCY_CODE VARCHAR2(20) 
, TAX_CODE VARCHAR2(20) 
, TAX_TYPE VARCHAR2(20) 
, PAYMENT_TERM VARCHAR2(20) 
, CONSTRAINT CMN_CUSTOMERS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_ITEMS
CREATE TABLE CMN.CMN_ITEMS 
(
  INTERNAL_ID NUMBER NOT NULL 
, ITEM_CODE VARCHAR2(25) 
, ITEM_SHORT_NUMBER VARCHAR2(30) 
, ITEM_DESCRIPTION1 VARCHAR2(30) 
, ITEM_DESCRIPTION2 VARCHAR2(30) 
, UNIT_OF_MEASURE VARCHAR2(3) 
, CONSTRAINT CMN_ITEMS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_ITEM_LONG_DESCS
CREATE TABLE CMN.CMN_ITEM_LONG_DESCS 
(
  INTERNAL_ID NUMBER NOT NULL 
, ITEM_SHORT_NUMBER VARCHAR2(30) 
, ITEM_LONG_DESCRIPTION VARCHAR2(2000) 
, CONSTRAINT CMN_ITEM_LONG_DESCS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_ACCOUNTS
CREATE TABLE CMN.CMN_ACCOUNTS 
(       
  INTERNAL_ID NUMBER NOT NULL
, ACCOUNT_ID NUMBER
, BUSINESS_UNIT VARCHAR2(20) NOT NULL  
, ACCOUNT_OBJECT VARCHAR2(20) NOT NULL  
, ACCOUNT_SUBSI VARCHAR2(20) 
, ACCOUNT_CODE VARCHAR2(100) 
, ACCOUNT_DESCR VARCHAR2(100) 
, CONSTRAINT CMN_ACCOUNTS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_CURRENCY_RATES
CREATE TABLE CMN.CMN_CURRENCY_RATES 
(       
  INTERNAL_ID NUMBER NOT NULL
, FROM_CURRENCY_CODE VARCHAR2(20) 
, TO_CURRENCY_CODE VARCHAR2(20) 
, CURRENCY_RATE NUMBER
, COMPANY_CODE VARCHAR2(20)   
, EFFECTIVE_FROM DATE
, EFFECTIVE_TO DATE
, CONSTRAINT CMN_CURRENCY_RATES_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_TAXES
CREATE TABLE CMN.CMN_TAXES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, TAX_CODE VARCHAR2(20) 
, TAX_RATE NUMBER 
, TAX_DESCR VARCHAR2(20) 
, TAX_APPLIED VARCHAR2(20)
, EFFECTIVE_FROM DATE 
, IS_CANCELLED NUMBER 
, IS_MAIN_TAX_CODE NUMBER 
, CONSTRAINT CMN_TAX_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_SUPPLIER_ADDITIONAL
CREATE TABLE CMN.CMN_SUPPLIER_ADDITIONAL 
(       
  INTERNAL_ID NUMBER NOT NULL 
, DESCRIPTION VARCHAR2(30) 
, COMPANY_CODE VARCHAR2(20) 
, SUPPLIER_CODE VARCHAR2(20) 
, CONSTRAINT CMN_SUPPLIER_ADDITIONAL_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_PURCHASERS
CREATE TABLE CMN.CMN_PURCHASERS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, PURCHASER_CODE VARCHAR2(20) 
, PURCHASER_NAME VARCHAR2(150) 
, CONTACT_NO VARCHAR2(20) 
, EMAIL_ADDRESS VARCHAR2(50) 
, FAX_NO VARCHAR2(20) 
, CONSTRAINT CMN_PURCHASERS_PK PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_AR_INVOICES
CREATE TABLE CMN.CMN_AR_INVOICES 
(       
  INTERNAL_ID NUMBER NOT NULL 
, INVOICE_NO NUMBER
, DOCUMENT_TYPE VARCHAR2(2) 
, COMPANY VARCHAR2(5) 
, ITEM VARCHAR2(3) 
, CUSTOMER NUMBER
, GL_DATE DATE
, INVOICE_DATE DATE
, GL_OFFSET VARCHAR2(4)
, PAYOR_NUMBER NUMBER
, PAY_STATUS_CODE VARCHAR2(1)
, AMOUNT_GROSS NUMBER
, AMOUNT_OPEN NUMBER
, AMOUNT_TAXABLE NUMBER
, CURRENCY_MODE VARCHAR2(1)
, CURRENCY_CODE VARCHAR2(3)
, CURRENCY_CONVERSION_RATE NUMBER
, FOREIGN_GROSS NUMBER
, FOREIGN_TAXABLE NUMBER
, FOREIGN_TAX NUMBER
, TAX_RATE NUMBER
, TAX_EXPL VARCHAR2(2)
, SERVICE_DATE DATE
, BUSINESS_UNIT VARCHAR2(12)
, OBJECT_ACCOUNT VARCHAR2(6)
, SUBSIDIARY VARCHAR2(8)
, SUBLEDGER_TYPE CHAR(1)
, GL_SUBLEDGER VARCHAR2(8)
, PAYMENT_TERM_CODE VARCHAR2(3)
, DUE_DATE DATE
, DISCOUNT_DATE DATE
, FINANCE_CHARGES CHAR(1)
, INVOICE_NUMBER VARCHAR2(25)
, SALE_DOC_NUMBER NUMBER
, SALE_DOC_TYPE VARCHAR2(2)
, REFERENCE VARCHAR2(25)
, EXPLANATION VARCHAR2(30)
, REMARKS VARCHAR2(30)
, FREQUENCY VARCHAR2(2)
, NO_OF_PAYMENT NUMBER
, USER_REFERENCE_NO VARCHAR2(15)
, NETTING_STATUS_CODE CHAR(1)
, CONSTRAINT CMN_AR_INVOICES PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_JOURNALS
CREATE TABLE CMN.CMN_JOURNALS 
(       
  INTERNAL_ID NUMBER NOT NULL 
, COMPANY_CODE VARCHAR2(5) 
, DOCUMENT_TYPE VARCHAR2(2) 
, DOCUMENT_NO NUMBER 
, GL_DATE DATE
, BUSINESS_UNIT VARCHAR2(12)
, OBJECT_ACCOUNT VARCHAR2(6)
, SUBSIDIARY VARCHAR2(8)
, GL_SUBLEDGER VARCHAR2(8)
, SUBLEDGER_TYPE CHAR(1)
, CURRENCY_CODE_FROM VARCHAR2(3)
, CURRENCY_RATE NUMBER
, HISTORICAL_CURRENCY_RATE NUMBER
, HISTORICAL_DATE DATE
, AMOUNT NUMBER
, UNITS NUMBER
, ALPHA_EXPLANATION VARCHAR2(30)
, REMARKS VARCHAR2(30)
, PURCHASE_ORDER VARCHAR2(5)
, ORIGINAL_ORDER VARCHAR2(5)
, PO_TYPE VARCHAR2(2)
, PO_SUFFIX VARCHAR2(3)
, TAX_DATE DATE
, CURRENCY_MODE CHAR(1)
, FOREIGN_AMOUNT NUMBER
, GROSS_AMOUNT NUMBER
, FOREIGN_GROSS NUMBER
, ENTRY_LINE_NO NUMBER
, LEDGER_TYPE VARCHAR2(3 BYTE)
, LINE_EXTENSION_CODE VARCHAR2(2 BYTE)
, BATCH_NUMBER NUMBER  
, CONSTRAINT CMN_JOURNALS PRIMARY KEY (INTERNAL_ID) ENABLE
);

-- CMN_EMP_GRADES
CREATE TABLE CMN.CMN_EMP_GRADES
(
  INTERNAL_ID NUMBER NOT NULL 
, GRADE_CODE VARCHAR2(20)
, GRADE_DESC VARCHAR2(100)
, CONSTRAINT CMN_EMP_GRADES_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);

-- CMN_SAL_ADMIN_PLANS
CREATE TABLE CMN.CMN_SAL_ADMIN_PLANS
(
  INTERNAL_ID NUMBER NOT NULL 
, PLAN_CODE VARCHAR2(20)
, PLAN_DESC VARCHAR2(100)
, CONSTRAINT CMN_SAL_ADMIN_PLANS_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);

-- CMN_JOB_CODES
CREATE TABLE CMN.CMN_JOB_CODES
(
  INTERNAL_ID NUMBER NOT NULL 
, JOB_CODE VARCHAR2(20)
, CODE_DESC VARCHAR2(100)
, CONSTRAINT CMN_JOB_CODES_PK PRIMARY KEY (INTERNAL_ID) ENABLE 
);


